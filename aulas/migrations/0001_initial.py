# Generated by Django 4.1.1 on 2022-10-17 01:51

import aulas.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Nivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True, verbose_name='Indicador URL')),
            ],
            options={
                'verbose_name': 'nivel',
                'verbose_name_plural': 'niveles',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Clase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=50, unique=True, verbose_name='Título')),
                ('p_general', models.TextField(blank=True, null=True, verbose_name='Propósito general')),
                ('p_especifico', models.TextField(blank=True, null=True, verbose_name='Propósito específico')),
                ('material', models.FileField(blank=True, default='', null=True, upload_to=aulas.models.Clase.clase_directory_path)),
                ('video', models.FileField(blank=True, null=True, upload_to=aulas.models.Clase.clase_directory_path)),
                ('is_available', models.BooleanField(choices=[(False, 'No disponible'), (True, 'Disponible')], default=False, verbose_name='Disponibilidad')),
                ('nivel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clases', to='aulas.nivel')),
            ],
            options={
                'verbose_name': 'clase',
                'verbose_name_plural': 'clases',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=25, unique=True, verbose_name='Usuario')),
                ('telefono', models.CharField(blank=True, max_length=25, null=True, verbose_name='Teléfono')),
                ('fecha_registro', models.DateField(auto_now=True, verbose_name='Fecha de registro')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_maestro', models.BooleanField(default=False)),
                ('tema', models.CharField(choices=[('light', 'light'), ('dark', 'dark')], default='light', max_length=10)),
                ('clases_vistas', models.ManyToManyField(blank=True, default='Ninguna', to='aulas.clase', verbose_name='Clases vistas')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('niveles', models.ManyToManyField(default='No asignado', to='aulas.nivel', verbose_name='Niveles')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'ordering': ['id'],
            },
        ),
    ]
